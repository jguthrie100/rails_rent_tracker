<!-- Hack to avoid 'jQuery flickering' when page intially loads -->
<script>document.write('<style type="text/css">body{display:none}</style>');</script>

<% failed_edits = Hash.new %>
<h3 class="text-primary">List of Houses</h3>
<table class="table table-hover table-condensed table-striped">
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th>Name</th>
      <th>Address</th>
      <th>&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <%# Create rows of Houses %>
    <%= form_for :houses, :url => update_multiple_houses_path, :method => "put" do |f| %>
      <% @houses.each do |h| %>

        <%# Populate failed_edits hash with list of errors if applicable %>
        <% (!params.nil? && params[h.id.to_s]) ? (failed_edits[h.id] = params[h.id.to_s]) : "" %>

        <%= fields_for "houses[]", h do |hf| %>
          <tr id="house_row_<%= h.id %>" class="house_row" style="font-size: 11px">
            <td>
              <%# Checkbox %>
              <input id="checkbox_<%= h.id %>" class="checkbox" type="checkbox" onchange="toggle_edit(<%= h.id %>)" />
            </td>
            <td>
              <%# House name (w/ link) / House name edit field %>
              <%= link_to(h.name, house_path(h), class: "display name") %><br />
              <%= hf.text_field(:name, class: "edit name", value: "#{failed_edits[h.id] ? failed_edits[h.id][:name] : h.name}") %>
            </td>
            <td>
              <%# House address (w/ map link) / House address edit field %>
              <span class="display name"><%= h.address %> - <%= link_to("[map]", "http://www.google.com/maps/search/#{h.address}", :target => "_blank") %></span><br />
              <%= hf.text_field(:address, class: "edit name", size: 100, value: "#{failed_edits[h.id] ? failed_edits[h.id][:address] : h.address}") %>
            </td>
            <td>
              <% is_updated_id = "houses_" + h.id.to_s + "_is_updated" %>
              <%= hf.hidden_field(:is_updated, :value => 'false') %>

              <%# Save button %>
              <button id="save_btn_<%= h.id %>" class="fa fa-floppy-o btn btn-primary disabled" onclick="document.getElementById('<%= is_updated_id %>').value='true'" disabled></button>

              <%# Delete button (w/ confirm message) %>
              <%= link_to "", {:controller => :houses, :action => 'archive', :id => h.id }, :method => :patch, class: "fa fa-trash btn btn-danger", data: { confirm: "Are you sure you want to archive house '#{h.name.upcase}' and remove it from your lst of current Houses? (This change can be reversed later..)" } %>
            </td>
          </tr>
        <% end %>
      <% end %>
    <% end %>
        <%# Create final row with a form to add a new House to the inventory %>
        <%= form_tag(houses_path) do %>
          <% (!params.nil? && params['new']) ? (failed_edits['new'] = params['new']) : "" %>
          <tr id="house_row_new" class="house_row" style="font-size: 11px">
            <td>
              <%# Checkbox %>
              <input id="checkbox_new" class="checkbox new_house" type="checkbox" onchange="toggle_edit('new')" />
            </td>
            <td>
              <%# House name edit field %>
              <%= text_field(:house, :name, disabled: "true", class: "display edit name", value: "#{failed_edits['new'] ? failed_edits['new'][:name] : ''}") %>
            </td>
            <td>
              <%# House address edit field %>
              <%= text_field(:house, :address, :size => 100, disabled: "true", class: "display edit address", value: "#{failed_edits['new'] ? failed_edits['new'][:address] : ''}") %>
            </td>
            <td>
              <%# Save button %>
              <button id="save_btn_new" class="fa fa-floppy-o btn btn-primary disabled new_house" disabled></button>
            </td>
          </tr>
        <% end %>
  </tbody>
</table>

<script>

// On load we want to select the error'd rows and highlight the fields that raised an error
$(document).ready(function() {
  $(".edit").css("visibility", "hidden");
  $(".edit").prop("disabled", true);
  $(".display").css("visibility", "visible");

//  <%# Automatically select and highlight row that failed to update/be saved and threw the error %>
  <% failed_edits.keys.each do |h_id| %>
    <% h_id.is_a?(String) ? (h_id_s = "'#{h_id}'".html_safe) : (h_id_s = h_id) %>
    $("#checkbox_" + <%= h_id_s %>).prop("checked", true);
    toggle_edit(<%= h_id_s %>);

//    <%# Highlight the attributes that were the reason for the error %>
    <% failed_edits[h_id].keys.each do |attr| %>
      <% next unless failed_edits[h_id][:errors].include? attr %>
      $(".<%= attr %>.edit", "#house_row_" + <%= h_id_s %>).css("background-color", "rgba(255,0,0,0.5)");
    <% end %>
  <% end %>

  $("body").css("display","block");
});

// Method that gets called everytime a checkbox is selected
function toggle_edit(id) {
  if ( $("#checkbox_" + id).prop("checked") ) {
    // WHEN A ROW IS SELECTED..

    // Enable the Save button
    $("#save_btn_" + id).removeClass("disabled")
                        .prop("disabled", false);

    // Hide all the display fields and show and enable all the edit fields
    $(".display", "#house_row_" + id).css("visibility", "hidden");
    $(".edit", "#house_row_" + id).prop("disabled", false);
    $(".edit", "#house_row_" + id).css("visibility", "visible");

    // Fade out the unselected rows and disable the checkboxes on them
    $(".house_row:not(#house_row_" + id + ")").css("opacity", "0.5");
    $(".checkbox:not(#checkbox_" + id + ")").prop("disabled", true);

  } else {
    // WHEN A ROW IS DESELECTED..

    // Disable save button
    $("#save_btn_" + id).addClass("disabled")
                        .prop("disabled", true);

    // Hide and disable all the edit fields and display the display fields
    $(".edit", "#house_row_" + id).prop("disabled", true);
    $(".edit", "#house_row_" + id).css("visibility", "hidden");
    $(".display", "#house_row_" + id).css("visibility", "visible");

    // Fade all the other rows back in and enable all the checkboxes
    $(".house_row").css("opacity", "1");
    $(".checkbox").prop("disabled", false);
  }
}
</script>
